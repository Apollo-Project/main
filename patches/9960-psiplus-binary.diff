--- psi.orig/psi.desktop
+++ psi/psi.desktop
@@ -5,8 +5,8 @@ Type=Application
 Name=Psi+
 GenericName=Jabber Client
 Comment=Communicate over the Jabber network
-Icon=psi
-Exec=psi %U
+Icon=psi-plus
+Exec=psi-plus %U
 MimeType=x-scheme-handler/xmpp;
 Terminal=false
 Categories=Network;InstantMessaging;Qt;
--- psi.orig/qcm/certstore.qcm
+++ psi/qcm/certstore.qcm
@@ -73,10 +73,10 @@ public:
 			if(QFile::exists(conf->getenv("PREFIX") + "/certs/rootcerts.pem"))
 				path = "$$PREFIX/certs/rootcerts.pem";
 			else
-				path = "$$DATADIR/psi/certs/rootcerts.pem";
+				path = "$$DATADIR/psi-plus/certs/rootcerts.pem";
 
 			QString extra =
-			"qcasharedfiles.path = $$DATADIR/psi\n"
+			"qcasharedfiles.path = $$DATADIR/psi-plus\n"
 			"qcasharedfiles.files = third-party/qca/qca/certs\n"
 			"INSTALLS += qcasharedfiles\n";
 			conf->addExtra(extra);
--- psi.orig/qcm/conf.qcm
+++ psi/qcm/conf.qcm
@@ -20,14 +20,14 @@ public:
 		conf->addExtra("CONFIG += QuickDirtyChecker");
 		return true;
 #else
-		conf->addExtra(QString("PSI_LIBDIR=%1/psi").arg(conf->getenv("LIBDIR")));
-		conf->addExtra(QString("PSI_DATADIR=%1/psi").arg(conf->getenv("DATADIR")));
+		conf->addExtra(QString("PSI_LIBDIR=%1/psi-plus").arg(conf->getenv("LIBDIR")));
+		conf->addExtra(QString("PSI_DATADIR=%1/psi-plus").arg(conf->getenv("DATADIR")));
 
 		QFile file("src/config.h");
 		if ( file.open(QIODevice::WriteOnly | QIODevice::Text) ) {
 			QTextStream stream( &file );
-			stream << "#define PSI_LIBDIR \"" << conf->getenv("LIBDIR") << "/psi\"" << endl;
-			stream << "#define PSI_DATADIR \"" << conf->getenv("DATADIR") << "/psi\"" << endl;
+			stream << "#define PSI_LIBDIR \"" << conf->getenv("LIBDIR") << "/psi-plus\"" << endl;
+			stream << "#define PSI_DATADIR \"" << conf->getenv("DATADIR") << "/psi-plus\"" << endl;
 		}
 
 		conf->addDefine("HAVE_CONFIG");
--- psi.orig/src/chatviewthemeprovider.cpp
+++ psi/src/chatviewthemeprovider.cpp
@@ -98,7 +98,7 @@ const QStringList ChatViewThemeProvider:
 	QStringList dirs;
 	dirs << ":";
 	dirs << ".";
-	dirs << ApplicationInfo::homeDir();
+	dirs << ApplicationInfo::homeDir(ApplicationInfo::DataLocation);
 	dirs << ApplicationInfo::resourcesDir();
 
 	QSet<QString> ret;
--- psi.orig/src/homedirmigration.ui
+++ psi/src/homedirmigration.ui
@@ -43,7 +43,7 @@ p, li { white-space: pre-wrap; }
 &lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
 p, li { white-space: pre-wrap; }
 &lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Serif'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
-&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;Copy the existing profile to the new directory required to run Psi. The old profile will not be removed. You can remove it manually later.&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot; font-size:medium; font-weight:600; color:#1a1a1a;&quot;&gt;(Recommended)&lt;/span&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;Copy the existing profile to the new directory required to run Psi+. The old profile will not be removed. You can remove it manually later.&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot; font-size:medium; font-weight:600; color:#1a1a1a;&quot;&gt;(Recommended)&lt;/span&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="text">
       <string>Import Psi profile</string>
@@ -74,7 +74,7 @@ p, li { white-space: pre-wrap; }
 &lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
 p, li { white-space: pre-wrap; }
 &lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Serif'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
-&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;Create a new Psi profile. The old profile will not be removed, but you will be unable to choose it.&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot; font-size:medium; font-weight:600; color:#1a1a1a;&quot;&gt;(Not recommended)&lt;/span&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;Create a new Psi+ profile. The old profile will not be removed, but you will be unable to choose it.&lt;br/&gt;&lt;/span&gt;&lt;span style=&quot; font-size:medium; font-weight:600; color:#1a1a1a;&quot;&gt;(Not recommended)&lt;/span&gt;&lt;span style=&quot; font-size:medium; color:#1a1a1a;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="text">
       <string>Create new profile</string>
--- psi.orig/src/options/opt_application.cpp
+++ psi/src/options/opt_application.cpp
@@ -133,7 +133,7 @@ void OptionsTabApplication::applyOptions
 		TranslationManager::instance()->loadTranslation(itemData);
 		QMessageBox::information(0, tr("Information"), tr("Some of the options you changed will only have full effect upon restart."));
 	}
-	QSettings s(ApplicationInfo::homeDir() + "/psirc", QSettings::IniFormat);
+	QSettings s(ApplicationInfo::homeDir(ApplicationInfo::ConfigLocation) + "/psirc", QSettings::IniFormat);
 	s.setValue("last_lang", itemData);
 
 	//Auto-load
@@ -190,7 +190,7 @@ void OptionsTabApplication::restoreOptio
 		d->cb_lang->addItem(vList.get(item));
 	}
 	QString curLang = TranslationManager::instance()->currentLanguage();
-	QSettings s(ApplicationInfo::homeDir() + "/psirc", QSettings::IniFormat);
+	QSettings s(ApplicationInfo::homeDir(ApplicationInfo::ConfigLocation) + "/psirc", QSettings::IniFormat);
 	QString curL = s.value("last_lang", "").toString();
 	if (curL.isEmpty())
 		d->cb_lang->setCurrentIndex( 0 );
--- psi.orig/src/pluginhost.cpp
+++ psi/src/pluginhost.cpp
@@ -967,9 +967,9 @@ QString PluginHost::appOsName()
 	return ApplicationInfo::osName();
 }
 
-QString PluginHost::appHomeDir()
+QString PluginHost::appHomeDir(ApplicationInfoAccessingHost::HomedirType type)
 {
-	return ApplicationInfo::homeDir();
+	return ApplicationInfo::homeDir((ApplicationInfo::HomedirType)type);
 }
 
 QString PluginHost::appResourcesDir()
@@ -982,9 +982,9 @@ QString PluginHost::appLibDir()
 	return ApplicationInfo::libDir();
 }
 
-QString PluginHost::appProfilesDir()
+QString PluginHost::appProfilesDir(ApplicationInfoAccessingHost::HomedirType type)
 {
-	return ApplicationInfo::profilesDir();
+	return ApplicationInfo::profilesDir((ApplicationInfo::HomedirType)type);
 }
 
 QString PluginHost::appHistoryDir()
@@ -992,9 +992,9 @@ QString PluginHost::appHistoryDir()
 	return ApplicationInfo::historyDir();
 }
 
-QString PluginHost::appCurrentProfileDir()
+QString PluginHost::appCurrentProfileDir(ApplicationInfoAccessingHost::HomedirType type)
 {
-	return ApplicationInfo::currentProfileDir();
+	return ApplicationInfo::currentProfileDir((ApplicationInfo::HomedirType)type);
 }
 
 QString PluginHost::appVCardDir()
--- psi.orig/src/pluginhost.h
+++ psi/src/pluginhost.h
@@ -13,6 +13,7 @@
 #include <QPointer>
 #include <QTextEdit>
 
+#include "applicationinfo.h"
 #include "userlist.h"
 #include "iconset.h"
 #include "stanzasendinghost.h"
@@ -123,12 +124,12 @@ public:
 	QString appCapsNode();
 	QString appCapsVersion();
 	QString appOsName();
-	QString appHomeDir();
+	QString appHomeDir(HomedirType type);
 	QString appResourcesDir();
 	QString appLibDir();
-	QString appProfilesDir();
+	QString appProfilesDir(HomedirType type);
 	QString appHistoryDir();
-	QString appCurrentProfileDir();
+	QString appCurrentProfileDir(HomedirType type);
 	QString appVCardDir();
 
 	//AccountInfoAcsessingHost
--- psi.orig/src/plugins/include/applicationinfoaccessinghost.h
+++ psi/src/plugins/include/applicationinfoaccessinghost.h
@@ -12,6 +12,11 @@ struct Proxy {
 class ApplicationInfoAccessingHost
 {
 public:
+	enum HomedirType {
+		ConfigLocation,
+		DataLocation,
+		CacheLocation
+	};
 	virtual ~ApplicationInfoAccessingHost() {}
 
 	// Version info
@@ -22,12 +27,12 @@ public:
 	virtual QString appOsName() = 0;
 
 	// Directories
-	virtual QString appHomeDir() = 0;
+	virtual QString appHomeDir(HomedirType type) = 0;
 	virtual QString appResourcesDir() = 0;
 	virtual QString appLibDir() = 0;
-	virtual QString appProfilesDir() = 0;
+	virtual QString appProfilesDir(HomedirType type) = 0;
 	virtual QString appHistoryDir() = 0;
-	virtual QString appCurrentProfileDir() = 0;
+	virtual QString appCurrentProfileDir(HomedirType type) = 0;
 	virtual QString appVCardDir() = 0;
 
 	virtual Proxy getProxyFor(const QString& obj) = 0;
--- psi.orig/src/plugins/psiplugin.pri
+++ psi/src/plugins/psiplugin.pri
@@ -2,7 +2,7 @@ TEMPLATE = lib
 CONFIG += plugin
 QT += xml
 
-target.path = $$(HOME)/.local/share/Psi/plugins
+target.path = $$(HOME)/.local/share/Psi+/plugins
 INSTALLS += target
 
 include(plugins.pri)
--- psi.orig/src/psithemeprovider.cpp
+++ psi/src/psithemeprovider.cpp
@@ -36,7 +36,7 @@ QString PsiThemeProvider::themePath(cons
 	QStringList dirs;
 	dirs << ":";
 	dirs << ".";
-	dirs << ApplicationInfo::homeDir();
+	dirs << ApplicationInfo::homeDir(ApplicationInfo::DataLocation);
 	dirs << ApplicationInfo::resourcesDir();
 
 	foreach (QString dir, dirs) {
--- psi.orig/src/src.pro
+++ psi/src/src.pro
@@ -4,7 +4,7 @@
 
 # Configuration
 TEMPLATE = app
-TARGET    = psi
+TARGET    = psi-plus
 CONFIG  += qt thread x11 
 
 #CONFIG += use_crash
@@ -42,17 +42,17 @@ unix {
 
 	# icons and desktop files
 	dt.path=$$PREFIX/share/applications/
-	dt.files = ../psi.desktop 
+	dt.extra = cp -f ../psi.desktop $(INSTALL_ROOT)$$dt.path/psi-plus.desktop
 	icon1.path=$$PREFIX/share/icons/hicolor/16x16/apps
-	icon1.extra = cp -f ../iconsets/system/default/psiplus/logo_16.png $(INSTALL_ROOT)$$icon1.path/psi.png
+	icon1.extra = cp -f ../iconsets/system/default/psiplus/logo_16.png $(INSTALL_ROOT)$$icon1.path/psi-plus.png
 	icon2.path=$$PREFIX/share/icons/hicolor/32x32/apps
-	icon2.extra = cp -f ../iconsets/system/default/psiplus/logo_32.png $(INSTALL_ROOT)$$icon2.path/psi.png
+	icon2.extra = cp -f ../iconsets/system/default/psiplus/logo_32.png $(INSTALL_ROOT)$$icon2.path/psi-plus.png
 	icon3.path=$$PREFIX/share/icons/hicolor/48x48/apps
-	icon3.extra = cp -f ../iconsets/system/default/psiplus/logo_48.png $(INSTALL_ROOT)$$icon3.path/psi.png
+	icon3.extra = cp -f ../iconsets/system/default/psiplus/logo_48.png $(INSTALL_ROOT)$$icon3.path/psi-plus.png
 	icon4.path=$$PREFIX/share/icons/hicolor/64x64/apps
-	icon4.extra = cp -f ../iconsets/system/default/psiplus/logo_64.png $(INSTALL_ROOT)$$icon4.path/psi.png
+	icon4.extra = cp -f ../iconsets/system/default/psiplus/logo_64.png $(INSTALL_ROOT)$$icon4.path/psi-plus.png
 	icon5.path=$$PREFIX/share/icons/hicolor/128x128/apps
-	icon5.extra = cp -f ../iconsets/system/default/psiplus/logo_128.png $(INSTALL_ROOT)$$icon5.path/psi.png
+	icon5.extra = cp -f ../iconsets/system/default/psiplus/logo_128.png $(INSTALL_ROOT)$$icon5.path/psi-plus.png
 	INSTALLS += dt icon1 icon2 icon3 icon4 icon5
 }
 
@@ -140,7 +140,7 @@ RESOURCES += ../psi.qrc ../iconsets.qrc
 
 # Platform specifics
 unix:!mac {
-	QMAKE_POST_LINK = rm -f ../psi ; ln -s src/psi ../psi
+	QMAKE_POST_LINK = rm -f ../psi-plus ; ln -s src/psi-plus ../psi-plus
 }
 win32 {
 	contains(QMAKE_HOST.arch, x86_64):{
