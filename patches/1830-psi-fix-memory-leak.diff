--- psi.orig/src/eventdb.cpp
+++ psi/src/eventdb.cpp
@@ -577,16 +577,20 @@ void EDBFlatFile::performRequests()
 			if(id < f->total()-1)
 				nextId = QString::number(id+1);
 
+			bool matched = false;
 			if(e->type() == PsiEvent::Message) {
 				MessageEvent *me = (MessageEvent *)e;
 				const Message &m = me->message();
 				if(m.body().indexOf(r->findStr, 0, Qt::CaseInsensitive) != -1) {
 					EDBItemPtr ei = EDBItemPtr(new EDBItem(e, QString::number(id), prevId, nextId));
 					result.append(ei);
+					matched = true;
 					//commented line below to return ALL(instead of just first) messages that contain findStr
 					//break;
 				}
 			}
+			if (!matched)
+				delete e;
 
 			if(r->dir == Forward)
 				++id;
@@ -609,14 +613,19 @@ void EDBFlatFile::performRequests()
 			if(id < f->total()-1)
 				nextId = QString::number(id+1);
 
+			bool matched = false;
 			if(e->type() == PsiEvent::Message) {
 				MessageEvent *me = (MessageEvent *)e;
 				const Message &m = me->message();
 				if(m.timeStamp() > r->first && m.timeStamp() < r->last ) {
 					EDBItemPtr ei = EDBItemPtr(new EDBItem(e, QString::number(id), prevId, nextId));
 					result.append(ei);
+					matched = true;
 				}
 			}
+			if (!matched)
+				delete e;
+
 			++id;
 		}
 		resultReady(r->id, result);
--- psi.orig/src/historydlg.cpp
+++ psi/src/historydlg.cpp
@@ -345,12 +345,10 @@ void HistoryDlg::exportHistory()
 		}
 
 		const EDBResult r = h->result();
-		if(r.count() <= 0) {
-			break;
-		}
+		int cnt = r.count();
 
 		// events are in forward order
-		for(int i = 0; i < r.count(); ++i) {
+		for(int i = 0; i < cnt; ++i) {
 			EDBItemPtr item = r.value(i);
 			id = item->nextId();
 			PsiEvent *e = item->event();
@@ -384,9 +382,10 @@ void HistoryDlg::exportHistory()
 
 			stream << txt << endl;
 		}
+		delete h;
 
 		// done!
-		if(id.isEmpty()) {
+		if(cnt == 0 || id.isEmpty()) {
 			break;
 		}
 	}
@@ -430,6 +429,7 @@ void HistoryDlg::edb_finished()
 				d->id_begin = it->id();
 				d->id_prev = it->prevId();
 				displayResult(r, EDB::Forward);
+				setButtons();
 			}
 			else if (d->reqType == TypeEarliest || d->reqType == TypeNext || d->reqType == TypeDate)
 			{
@@ -443,6 +443,7 @@ void HistoryDlg::edb_finished()
 				d->id_begin = it->id();
 				d->id_prev = it->prevId();
 				displayResult(r, EDB::Backward);
+				setButtons();
 			}
 			else if (d->reqType == TypeFindOldest)
 			{
@@ -450,28 +451,30 @@ void HistoryDlg::edb_finished()
 				if (str.isEmpty())
 				{
 					getLatest();
-					return;
 				}
-				d->reqType = TypeFind;
-				d->findStr = str;
-				EDBItemPtr ei = r.first();
-				startRequest();
-				getEDBHandle()->find(str, d->jid, ei->id(), EDB::Forward);
+				else
+				{
+					d->reqType = TypeFind;
+					d->findStr = str;
+					EDBItemPtr ei = r.first();
+					startRequest();
+					getEDBHandle()->find(str, d->jid, ei->id(), EDB::Forward);
+					setButtons();
+				}
 			}
 			else if (d->reqType == TypeFind)
 			{
 				displayResult(r, EDB::Forward);
 				highlightBlocks(ui_.searchField->text());
-				return;
 			}
 
-			setButtons();
 		}
 		else
 		{
 			ui_.msgLog->clear();
 		}
 	}
+	delete h;
 }
 
 void HistoryDlg::setButtons()
