--- git.orig/src/chatview_te.cpp
+++ git/src/chatview_te.cpp
@@ -44,6 +44,7 @@
 ChatView::ChatView(QWidget *parent)
 	: PsiTextView(parent)
 	, isMuc_(false)
+	, isEncryptionEnabled_(false)
 	, oldTrackBarPosition(0)
 	, dialog_(0)
 	, share_(this)
@@ -72,12 +73,18 @@ ChatView::ChatView(QWidget *parent)
 			logIconReceive = IconsetFactory::iconPixmap("psi/notification_chat_receive").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
 			logIconSend = IconsetFactory::iconPixmap("psi/notification_chat_send").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
 			logIconDelivered = IconsetFactory::iconPixmap("psi/notification_chat_delivery_ok").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
+			logIconReceivePgp = IconsetFactory::iconPixmap("psi/notification_chat_receive_pgp").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
+			logIconSendPgp = IconsetFactory::iconPixmap("psi/notification_chat_send_pgp").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
+			logIconDeliveredPgp = IconsetFactory::iconPixmap("psi/notification_chat_delivery_ok_pgp").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
 			logIconTime = IconsetFactory::iconPixmap("psi/notification_chat_time").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
 			logIconInfo = IconsetFactory::iconPixmap("psi/notification_chat_info").scaledToHeight(logIconsSize, Qt::SmoothTransformation);
 		} else {
 			logIconReceive = IconsetFactory::iconPixmap("psi/notification_chat_receive");
 			logIconSend = IconsetFactory::iconPixmap("psi/notification_chat_send");
 			logIconDelivered = IconsetFactory::iconPixmap("psi/notification_chat_delivery_ok");
+			logIconReceivePgp = IconsetFactory::iconPixmap("psi/notification_chat_receive_pgp");
+			logIconSendPgp = IconsetFactory::iconPixmap("psi/notification_chat_send_pgp");
+			logIconDeliveredPgp = IconsetFactory::iconPixmap("psi/notification_chat_delivery_ok_pgp");
 			logIconTime = IconsetFactory::iconPixmap("psi/notification_chat_time");
 			logIconInfo = IconsetFactory::iconPixmap("psi/notification_chat_info");
 		}
@@ -107,6 +114,11 @@ void ChatView::setDialog(QWidget* dialog
 	dialog_ = dialog;
 }
 
+void ChatView::setEncryptionEnabled(bool enabled)
+{
+	isEncryptionEnabled_ = enabled;
+}
+
 void ChatView::setSessionData(bool isMuc, const QString &jid, const QString name)
 {
 	isMuc_ = isMuc;
@@ -147,15 +159,18 @@ void ChatView::addLogIconsResources()
 {
 	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_receive"), logIconReceive);
 	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_send"), logIconSend);
+	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_receive_pgp"), logIconReceivePgp);
+	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_send_pgp"), logIconSendPgp);
 	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_time"), logIconTime);
 	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_info"), logIconInfo);
 	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_delivered"), logIconDelivered);
+	document()->addResource(QTextDocument::ImageResource, QUrl("icon:log_icon_delivered_pgp"), logIconDeliveredPgp);
 }
 
 void ChatView::markReceived(QString id)
 {
 	if (useMessageIcons_) {
-		document()->addResource(QTextDocument::ImageResource, QUrl(QString("icon:delivery") + id), logIconDelivered);
+		document()->addResource(QTextDocument::ImageResource, QUrl(QString("icon:delivery") + id), isEncryptionEnabled_? logIconDeliveredPgp : logIconDelivered);
 		setLineWrapColumnOrWidth(lineWrapColumnOrWidth());
 	}
 }
@@ -360,11 +375,14 @@ void ChatView::renderMessage(const Messa
 	QString timestr = formatTimeStamp(mv.dateTime());
 	QString color = colorString(mv.isLocal(), mv.isSpooled());
 	if (useMessageIcons_ && mv.isAwaitingReceipt()) {
-		document()->addResource(QTextDocument::ImageResource, QUrl(QString("icon:delivery") + mv.messageId()), logIconSend);
+		document()->addResource(QTextDocument::ImageResource, QUrl(QString("icon:delivery") + mv.messageId()),
+					isEncryptionEnabled_ ? logIconSendPgp : logIconSend);
 	}
-	QString icon = useMessageIcons_?
+	QString icon = useMessageIcons_ ?
 		(QString("<img src=\"%1\" />").arg(mv.isLocal()?
-		(mv.isAwaitingReceipt()?QString("icon:delivery") + mv.messageId():"icon:log_icon_send"):"icon:log_icon_receive")):"";
+		(mv.isAwaitingReceipt() ? QString("icon:delivery") + mv.messageId()
+			: isEncryptionEnabled_ ? "icon:log_icon_send_pgp" : "icon:log_icon_send")
+		: isEncryptionEnabled_ ? "icon:log_icon_receive_pgp" : "icon:log_icon_receive")) : "";
 	if (mv.isEmote()) {
 		appendText(icon + QString("<span style=\"color: %1\">").arg(color) + QString("[%1]").arg(timestr) + QString(" *%1 ").arg(mv.nick()) + mv.formattedText() + "</span>");
 	} else {
--- git.orig/src/chatview_te.h
+++ git/src/chatview_te.h
@@ -64,6 +64,8 @@ public:
 	bool internalFind(QString str, bool startFromBeginning = false);
 	ChatView *textWidget();
 
+	void setEncryptionEnabled(bool enabled);
+
 protected:
 	// override the tab/esc behavior
 	bool focusNextPrevChild(bool next);
@@ -94,6 +96,7 @@ signals:
 
 private:
 	bool isMuc_;
+	bool isEncryptionEnabled_;
 	QString jid_;
 	QString name_;
 	int  oldTrackBarPosition;
@@ -104,6 +107,9 @@ private:
 	QPixmap logIconSend;
 	QPixmap logIconReceive;
 	QPixmap logIconDelivered;
+	QPixmap logIconSendPgp;
+	QPixmap logIconReceivePgp;
+	QPixmap logIconDeliveredPgp;
 	QPixmap logIconTime;
 	QPixmap logIconInfo;
 	QAction *actQuote_;
--- git.orig/src/chatview_webkit.cpp
+++ git/src/chatview_webkit.cpp
@@ -111,6 +111,7 @@ ChatView::ChatView(QWidget *parent)
 	, dialog_(0)
 	, share_(this)
 	, isMuc_(false)
+	, isEncryptionEnabled_(false)
 {
 	jsObject = new ChatViewJSObject(this);
 	webView = new WebView(this);
@@ -153,6 +154,11 @@ void ChatView::init()
 	);
 }
 
+void ChatView::setEncryptionEnabled(bool enabled)
+{
+	isEncryptionEnabled_ = enabled;
+}
+
 void ChatView::embedJsObject()
 {
 	ChatViewTheme *theme = currentTheme();
@@ -169,6 +175,7 @@ void ChatView::markReceived(QString id)
 	QVariantMap m;
 	m["type"] = "receipt";
 	m["id"] = id;
+	m["encrypted"] = isEncryptionEnabled_;
 	sendJsObject(m);
 }
 
@@ -282,6 +289,7 @@ void ChatView::dispatchMessage(const Mes
 	QVariantMap vm = mv.toVariantMap(isMuc_, true);
 	vm["mtype"] = vm["type"];
 	vm["type"] = "message";
+	vm["encrypted"] = isEncryptionEnabled_;
 	sendJsObject(vm);
 }
 
--- git.orig/src/chatview_webkit.h
+++ git/src/chatview_webkit.h
@@ -84,6 +84,8 @@ public:
 	bool internalFind(QString str, bool startFromBeginning = false);
 	WebView * textWidget();
 
+	void setEncryptionEnabled(bool enabled);
+
 protected:
 	// override the tab/esc behavior
 	bool focusNextPrevChild(bool next);
@@ -115,6 +117,7 @@ private:
 	QPointer<QWidget> dialog_;
 	ChatViewShare share_;
 	bool isMuc_;
+	bool isEncryptionEnabled_;
 	QString jid_;
 	QString name_;
 	PsiAccount *account_;
--- git.orig/src/psichatdlg.cpp
+++ git/src/psichatdlg.cpp
@@ -779,6 +779,8 @@ void PsiChatDlg::updatePGP()
 	ui_.tb_pgp->setVisible(account()->hasPGP() &&
 	                       !smallChat_ &&
 	                       !PsiOptions::instance()->getOption("options.ui.chat.central-toolbar").toBool());
+
+	ui_.log->setEncryptionEnabled(isEncryptionEnabled());
 }
 
 void PsiChatDlg::doClearButton()
@@ -808,6 +810,7 @@ void PsiChatDlg::doClearButton()
 void PsiChatDlg::setPGPEnabled(bool enabled)
 {
 	act_pgp_->setChecked(enabled);
+	ui_.log->setEncryptionEnabled(enabled);
 }
 
 void PsiChatDlg::toggleSmallChat()
--- git.orig/themes/chatview/psi/classic/index.html
+++ git/themes/chatview/psi/classic/index.html
@@ -91,7 +91,7 @@ window[chatServer.jsNamespace()].theme =
 				var img = document.getElementById("receipt"+shared.cdata.id);
 				if (img) {
 					var sizeUri = messageIconsSize?"?w="+messageIconsSize+"&h="+messageIconsSize:"";
-					img.src = "icon:psi/notification_chat_delivery_ok"+sizeUri;
+					img.src = (shared.cdata.encrypted?"icon:psi/notification_chat_delivery_ok_pgp":"icon:psi/notification_chat_delivery_ok")+sizeUri;
 				}
 			}
 			if (shared.cdata.mtype == "message") {
@@ -128,6 +128,9 @@ window[chatServer.jsNamespace()].theme =
 							icon = shared.cdata.local?(shared.cdata.awaitingReceipt?
 								"psi/notification_chat_send":"psi/notification_chat_delivery_ok")
 								: "psi/notification_chat_receive";
+							if(shared.cdata.encrypted) {
+								icon += "_pgp"
+							}
 							break;
 						case "system":
 						case "subject":
