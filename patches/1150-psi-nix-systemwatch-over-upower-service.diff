--- git.orig/src/libpsi/tools/systemwatch/systemwatch_unix.cpp
+++ git/src/libpsi/tools/systemwatch/systemwatch_unix.cpp
@@ -19,7 +19,25 @@
  */
 
 #include "systemwatch_unix.h"
+#ifdef USE_DBUS
+# include <QDBusConnection>
+#endif
 
 UnixSystemWatch::UnixSystemWatch()
 {
+#ifdef USE_DBUS
+	QDBusConnection conn = QDBusConnection::systemBus();
+	conn.connect("org.freedesktop.UPower", "/org/freedesktop/UPower", "org.freedesktop.UPower", "Sleeping", this, SLOT(sleeping()));
+	conn.connect("org.freedesktop.UPower", "/org/freedesktop/UPower", "org.freedesktop.UPower", "Resuming", this, SLOT(resuming()));
+#endif
+}
+
+void UnixSystemWatch::sleeping()
+{
+	emit sleep();
+}
+
+void UnixSystemWatch::resuming()
+{
+	emit wakeup();
 }
--- git.orig/src/libpsi/tools/systemwatch/systemwatch_unix.h
+++ git/src/libpsi/tools/systemwatch/systemwatch_unix.h
@@ -25,8 +25,13 @@
 
 class UnixSystemWatch : public SystemWatch
 {
+	Q_OBJECT
 public:
 	UnixSystemWatch();
+
+private slots:
+	void sleeping();
+	void resuming();
 };
 
 
