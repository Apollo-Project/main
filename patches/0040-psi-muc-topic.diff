--- git.orig/src/groupchatdlg.cpp
+++ git/src/groupchatdlg.cpp
@@ -96,6 +96,8 @@
 
 
 
+#include "groupchattopicdlg.h"
+
 //----------------------------------------------------------------------------
 // StatusPingTask
 //----------------------------------------------------------------------------
@@ -224,7 +226,7 @@ public:
 	QString lastSearch;
 
 	QPointer<MUCConfigDlg> configDlg;
-	
+	QPointer<GroupchatTopicDlg> topicDlg;
 public:
 	bool trackBar;
 
@@ -593,7 +595,7 @@ GCMainDlg::GCMainDlg(PsiAccount *pa, con
 	ui_.log->setAccount(account());
 #endif
 
-	connect(ui_.pb_topic, SIGNAL(clicked()), SLOT(doTopic()));
+	connect(ui_.pb_topic, SIGNAL(clicked()), SLOT(openTopic()));
 	PsiToolTip::install(ui_.le_topic);
 
 	connect(account()->psi(), SIGNAL(accountCountChanged()), this, SLOT(updateIdentityVisibility()));
@@ -928,23 +930,27 @@ void GCMainDlg::le_downPressed()
 	}
 }*/
 
-void GCMainDlg::doTopic()
+void GCMainDlg::openTopic()
 {
-	bool ok = false;
-	QString str = QInputDialog::getText(this,
-		tr("Set Groupchat Topic"),
-		tr("Enter a topic:"),
-		QLineEdit::Normal, ui_.le_topic->text(), &ok);
-
-	if(ok) {
-		Message m(jid());
-		m.setType("groupchat");
-		m.setSubject(str);
-		m.setTimeStamp(QDateTime::currentDateTime());
-		aSend(m);
+	if(d->topicDlg) {
+		::bringToFront(d->topicDlg);
+	} else {
+		d->topicDlg = new GroupchatTopicDlg(this);
+		d->topicDlg->setAttribute(Qt::WA_DeleteOnClose);
+		d->topicDlg->show();
+		connect(d->topicDlg, SIGNAL(topicAccepted(const QString)), this, SLOT(setTopic(const QString)));
 	}
 }
 
+void GCMainDlg::setTopic(const QString &topic)
+{
+	Message m(jid());
+	m.setType("groupchat");
+	m.setSubject(topic);
+	m.setTimeStamp(QDateTime::currentDateTime());
+	aSend(m);
+}
+
 void GCMainDlg::doClear()
 {
 	ui_.log->clear();
@@ -1438,6 +1444,11 @@ const QString& GCMainDlg::nick() const
 	return d->self;
 }
 
+const QString& GCMainDlg::topic() const
+{
+	return d->topic;
+}
+
 void GCMainDlg::appendSysMsg(const QString &str, bool alert, const QDateTime &ts)
 {
 	MessageView mv = MessageView::fromPlainText(str, MessageView::System);
--- git.orig/src/groupchatdlg.h
+++ git/src/groupchatdlg.h
@@ -74,6 +74,7 @@ public:
 	void joined();
 	void setPassword(const QString&);
 	const QString& nick() const;
+	const QString& topic() const;
 
 	bool isInactive() const;
 	void reactivate();
@@ -108,7 +109,8 @@ private slots:
 	void scrollUp();
 	void scrollDown();
 	void mle_returnPressed();
-	void doTopic();
+	void openTopic();
+	void setTopic(const QString &);
 	void openFind();
 	void configureRoom();
 	void doFind(const QString &);
--- /dev/null
+++ git/src/groupchattopicdlg.cpp
@@ -0,0 +1,44 @@
+#include "groupchattopicdlg.h"
+#include "ui_groupchattopicdlg.h"
+
+#include "psioptions.h"
+#include "groupchatdlg.h"
+
+GroupchatTopicDlg::GroupchatTopicDlg(GCMainDlg *parent) :
+	QDialog(parent),
+	m_ui(new Ui::GroupchatTopicDlg)
+{
+	m_ui->setupUi(this);
+	QFont f;
+	f.fromString(PsiOptions::instance()->getOption("options.ui.look.font.chat").toString());
+	m_ui->pte_topic->setFont(f);
+	m_ui->pte_topic->setPlainText(parent->topic());
+}
+
+GroupchatTopicDlg::~GroupchatTopicDlg()
+{
+	delete m_ui;
+}
+
+QString GroupchatTopicDlg::topic() const
+{
+	return m_ui->pte_topic->toPlainText();
+}
+
+void GroupchatTopicDlg::accept()
+{
+	emit topicAccepted(m_ui->pte_topic->toPlainText());
+	QDialog::accept();
+}
+
+void GroupchatTopicDlg::changeEvent(QEvent *e)
+{
+	QDialog::changeEvent(e);
+	switch (e->type()) {
+		case QEvent::LanguageChange:
+			m_ui->retranslateUi(this);
+			break;
+		default:
+			break;
+	}
+}
--- /dev/null
+++ git/src/groupchattopicdlg.h
@@ -0,0 +1,32 @@
+#ifndef GROUPCHATTOPICDLG_H
+#define GROUPCHATTOPICDLG_H
+
+#include <QtGui/QDialog>
+
+namespace Ui {
+	class GroupchatTopicDlg;
+}
+
+class GCMainDlg;
+
+class GroupchatTopicDlg : public QDialog {
+	Q_OBJECT
+public:
+	GroupchatTopicDlg(GCMainDlg *parent = 0);
+	~GroupchatTopicDlg();
+	QString topic() const;
+
+protected:
+	void changeEvent(QEvent *e);
+
+private:
+	Ui::GroupchatTopicDlg *m_ui;
+
+public slots:
+	void accept();
+
+signals:
+	void topicAccepted(const QString &);
+};
+
+#endif // GROUPCHATTOPICDLG_H
--- /dev/null
+++ git/src/groupchattopicdlg.ui
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
+ <class>GroupchatTopicDlg</class>
+ <widget class="QDialog" name="GroupchatTopicDlg">
+  <property name="geometry">
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>600</width>
+    <height>450</height>
+   </rect>
+  </property>
+  <property name="windowTitle">
+   <string>Set Groupchat Topic</string>
+  </property>
+  <layout class="QVBoxLayout" name="verticalLayout">
+   <item>
+    <widget class="QPlainTextEdit" name="pte_topic">
+     <property name="whatsThis">
+      <string>Text of topic</string>
+     </property>
+    </widget>
+   </item>
+   <item>
+    <widget class="QDialogButtonBox" name="buttonBox">
+     <property name="orientation">
+      <enum>Qt::Horizontal</enum>
+     </property>
+     <property name="standardButtons">
+      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
+     </property>
+    </widget>
+   </item>
+  </layout>
+ </widget>
+ <resources/>
+ <connections>
+  <connection>
+   <sender>buttonBox</sender>
+   <signal>accepted()</signal>
+   <receiver>GroupchatTopicDlg</receiver>
+   <slot>accept()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>248</x>
+     <y>254</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>157</x>
+     <y>274</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>buttonBox</sender>
+   <signal>rejected()</signal>
+   <receiver>GroupchatTopicDlg</receiver>
+   <slot>reject()</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>316</x>
+     <y>260</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>286</x>
+     <y>274</y>
+    </hint>
+   </hints>
+  </connection>
+ </connections>
+</ui>
--- git.orig/src/src.pri
+++ git/src/src.pri
@@ -366,16 +366,19 @@ groupchat {
 	HEADERS += \
 		$$PWD/groupchatdlg.h \
 		$$PWD/gcuserview.h \
-		$$PWD/mucjoindlg.h
+		$$PWD/mucjoindlg.h \
+		$$PWD/groupchattopicdlg.h
 
 	SOURCES += \
 		$$PWD/groupchatdlg.cpp \
 		$$PWD/gcuserview.cpp \
-		$$PWD/mucjoindlg.cpp
+		$$PWD/mucjoindlg.cpp \
+		$$PWD/groupchattopicdlg.cpp
 
 	FORMS += \
 		$$PWD/groupchatdlg.ui \
-		$$PWD/mucjoin.ui
+		$$PWD/mucjoin.ui \
+		$$PWD/groupchattopicdlg.ui
 }
 
 whiteboarding {
