--- psi.orig/options/default.xml
+++ psi/options/default.xml
@@ -295,6 +295,7 @@
 					<maximum-jid-length type="int">25</maximum-jid-length>
 					<maximum-text-length type="int">300</maximum-text-length>
 					<maximum-status-length type="int">-1</maximum-status-length>
+					<avatar-size type="int">48</avatar-size>
 					<status>
 						<offline type="bool">true</offline>
 						<online type="bool">true</online>
--- psi.orig/src/options/opt_events.cpp
+++ psi/src/options/opt_events.cpp
@@ -108,6 +108,7 @@ void OptionsTabEvents::applyOptions()
 
 	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.enabled", d->ck_popupOn->isChecked());
 	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.incoming-message", d->ck_popupOnMessage->isChecked());
+	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.showMessage", d->ck_showPopupMessage->isChecked());
 	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.incoming-chat", d->ck_popupOnMessage->isChecked());
 	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.incoming-headline", d->ck_popupOnHeadline->isChecked());
 	PsiOptions::instance()->setOption("options.ui.notifications.passive-popups.incoming-file-transfer", d->ck_popupOnFile->isChecked());
@@ -133,9 +134,9 @@ void OptionsTabEvents::restoreOptions()
 	d->ck_autoAuth->setChecked( PsiOptions::instance()->getOption("options.subscriptions.automatically-allow-authorization").toBool() );
 	d->ck_notifyAuth->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.successful-subscription").toBool() );
 	d->cb_bounce->setCurrentIndex( d->cb_bounce->findData(PsiOptions::instance()->getOption("options.ui.notifications.bounce-dock").toString()) );
-
 	d->ck_popupOn->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.enabled").toBool() );
 	d->ck_popupOnMessage->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.incoming-message").toBool() || PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.incoming-chat").toBool() );
+	d->ck_showPopupMessage->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.showMessage").toBool());
 	d->ck_popupOnHeadline->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.incoming-headline").toBool() );
 	d->ck_popupOnFile->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.incoming-file-transfer").toBool() );
 	d->ck_popupOnOnline->setChecked( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.status.online").toBool() );
--- psi.orig/src/options/opt_events.ui
+++ psi/src/options/opt_events.ui
@@ -222,6 +222,13 @@
        </widget>
       </item>
       <item>
+       <widget class="QCheckBox" name="ck_showPopupMessage" >
+        <property name="text" >
+         <string>Show incoming message on popup</string>
+        </property>
+       </widget>
+      </item>
+      <item>
        <widget class="QCheckBox" name="ck_popupOnHeadline" >
         <property name="text" >
          <string>On incoming headline event</string>
--- psi.orig/src/psipopup.cpp
+++ psi/src/psipopup.cpp
@@ -32,6 +32,7 @@
 #include "iconlabel.h"
 #include "psioptions.h"
 #include "coloropt.h"
+#include "avatars.h"
 
 #include <QApplication>
 #include <QLayout>
@@ -67,7 +68,7 @@ public:
 
 	void init(const PsiIcon *titleIcon, QString titleText, PsiAccount *_acc, PopupType type);
 	QString clipText(QString);
-	QBoxLayout *createContactInfo(const PsiIcon *icon, QString text);
+	QBoxLayout *createContactInfo(const QPixmap *avatar, const PsiIcon *icon, QString text);
 
 private slots:
 	void popupDestroyed();
@@ -192,11 +193,21 @@ QString PsiPopup::Private::clipText(QStr
 	return text;
 }
 
-QBoxLayout *PsiPopup::Private::createContactInfo(const PsiIcon *icon, QString text)
+QBoxLayout *PsiPopup::Private::createContactInfo(const QPixmap *avatar, const PsiIcon *icon, QString text)
 {
 	QHBoxLayout *dataBox = new QHBoxLayout();
 
-	if ( icon ) {
+
+	if (avatar && !avatar->isNull()) {
+		int size = PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.avatar-size").toInt();
+		QLabel *avatarLabel = new QLabel(popup);
+		avatarLabel->setSizePolicy(QSizePolicy::Maximum, QSizePolicy::Preferred);
+		avatarLabel->setPixmap(avatar->scaled(QSize(size, size), Qt::KeepAspectRatio, Qt::SmoothTransformation));
+		dataBox->addWidget(avatarLabel);
+		dataBox->addSpacing(5);
+	}
+
+	if (icon) {
 		IconLabel *iconLabel = new IconLabel(popup);
 		iconLabel->setSizePolicy(QSizePolicy::Maximum, QSizePolicy::Preferred);
 		iconLabel->setPsiIcon(icon);
@@ -287,14 +298,14 @@ PsiPopup::PsiPopup(PopupType type, PsiAc
 	d->init(icon, text, acc, doAlertIcon ? type : AlertNone);
 }
 
-void PsiPopup::setData(const PsiIcon *icon, QString text)
+void PsiPopup::setData(const QPixmap *avatar, const PsiIcon *icon, QString text)
 {
 	if ( !d->popup ) {
 		deleteLater();
 		return;
 	}
 
-	d->popup->addLayout( d->createContactInfo(icon, text) );
+	d->popup->addLayout( d->createContactInfo(avatar, icon, text) );
 
 	// update id
 	if ( icon )
@@ -373,13 +384,29 @@ void PsiPopup::setData(const Jid &j, con
 			}
 		}
 	}
-
+	QPixmap avatar = d->account->avatarFactory()->getAvatar(jid);
 	// show popup
-	if ( d->popupType != AlertHeadline && (d->popupType != AlertFile || !PsiOptions::instance()->getOption("options.ui.file-transfer.auto-popup").toBool()) )
-		setData(icon, contactText);
+	if ( d->popupType != AlertHeadline && (d->popupType != AlertFile || !PsiOptions::instance()->getOption("options.ui.file-transfer.auto-popup").toBool()) ) {
+
+		if ((event && event->type() == PsiEvent::Message) && (PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.showMessage").toBool())) {
+			const Message *jmessage = &((MessageEvent *)event)->message();
+			QString message;
+			 
+			if ( !jmessage->subject().isEmpty() )
+				message += "<font color=\"red\"><b>" + tr("Subject:") + " " + jmessage->subject() + "</b></font><br>";
+			message += TextUtil::plain2rich( jmessage->body() );
+			
+			if (!message.isEmpty()) {
+				contactText += "<br/><font size=\"+1\">" + message + "</font>";
+			}
+		}
+
+
+                setData(&avatar, icon, contactText);
+	}
 	else if ( d->popupType == AlertHeadline ) {
 		QVBoxLayout *vbox = new QVBoxLayout;
-		vbox->addLayout( d->createContactInfo(icon, contactText) );
+		vbox->addLayout( d->createContactInfo(&avatar, icon, contactText) );
 
 		vbox->addSpacing(5);
 
--- psi.orig/src/psipopup.h
+++ psi/src/psipopup.h
@@ -23,6 +23,7 @@
 
 #include <QObject>
 
+class QPixmap;
 class PsiCon;
 class PsiAccount;
 class UserListItem;
@@ -58,7 +59,7 @@ public:
 	};
 	PsiPopup(PopupType type, PsiAccount *acc);
 
-	void setData(const PsiIcon *icon, QString text);
+	void setData(const QPixmap *avatar, const PsiIcon *icon, QString text);
 	void setData(const Jid &, const Resource &, const UserListItem * = 0, const PsiEvent * = 0);
 
 	void show();
