Entering 'iris'
Entering 'src/libpsi'
Index: psi/src/accountmanage.ui
===================================================================
--- psi.orig/src/accountmanage.ui	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/accountmanage.ui	2013-01-15 14:04:24.340826952 +0400
@@ -17,7 +17,7 @@
    <item>
     <layout class="QHBoxLayout">
      <item>
-      <widget class="QTreeWidget" name="lv_accs">
+      <widget class="AccountManageTree" name="lv_accs">
        <property name="indentation">
         <number>0</number>
        </property>
@@ -121,6 +121,11 @@
    <extends>QWidget</extends>
    <header>iconbutton.h</header>
   </customwidget>
+  <customwidget>
+   <class>AccountManageTree</class>
+   <extends>QTreeWidget</extends>
+   <header>accountmanagedlg.h</header>
+  </customwidget>
  </customwidgets>
  <resources/>
  <connections>
Index: psi/src/accountmanagedlg.cpp
===================================================================
--- psi.orig/src/accountmanagedlg.cpp	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/accountmanagedlg.cpp	2013-01-15 14:04:24.340826952 +0400
@@ -257,6 +257,7 @@
 	{
 		pa = _pa;
 		Q_ASSERT(!pa.isNull());
+		setFlags(flags() ^ Qt::ItemIsDropEnabled);
 		connect(pa, SIGNAL(updatedActivity()), SLOT(updateInfo()));
 		connect(pa, SIGNAL(updatedAccount()), SLOT(updateInfo()));
 		updateInfo();
@@ -286,6 +287,36 @@
 	}
 };
 
+
+
+AccountManageTree::AccountManageTree(QWidget *parent)
+	: QTreeWidget(parent)
+{
+
+}
+
+void AccountManageTree::dropEvent(QDropEvent *event)
+{
+	QTreeWidget::dropEvent(event);
+	AccountManageTree *tree = qobject_cast<AccountManageTree *>(event->source());
+
+	if (tree) {
+		QList<PsiAccount*> accountsList;
+		foreach (QTreeWidgetItem *ami, tree->findItems("*", Qt::MatchWildcard)) {
+			accountsList.append(((AccountManageItem *)ami)->pa.data());
+		}
+		emit orderChanged(accountsList);
+	}
+}
+
+void AccountManageTree::dragMoveEvent(QDragMoveEvent *event)
+{
+	QTreeWidget::dragMoveEvent(event);
+	sortByColumn(-1);
+}
+
+
+
 AccountManageDlg::AccountManageDlg(PsiCon *_psi)
 :QDialog(0)
 {
@@ -308,6 +339,7 @@
 
 	connect(lv_accs, SIGNAL(itemDoubleClicked(QTreeWidgetItem *, int)), SLOT(modify(QTreeWidgetItem *)));
 	connect(lv_accs, SIGNAL(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)), SLOT(qlv_selectionChanged(QTreeWidgetItem *, QTreeWidgetItem *)));
+	connect(lv_accs, SIGNAL(orderChanged(QList<PsiAccount*>)), psi, SLOT(setAccountsOrder(QList<PsiAccount*>)));
 	connect(psi, SIGNAL(accountAdded(PsiAccount *)), SLOT(accountAdded(PsiAccount *)));
 	connect(psi, SIGNAL(accountRemoved(PsiAccount *)), SLOT(accountRemoved(PsiAccount *)));
 #ifdef HAVE_QT5
@@ -315,6 +347,11 @@
 #else
 	lv_accs->header()->setResizeMode(QHeaderView::ResizeToContents);
 #endif
+	lv_accs->setDragDropMode(QAbstractItemView::InternalMove);
+	lv_accs->setDragDropOverwriteMode(false);
+	lv_accs->setSortingEnabled(true);
+	lv_accs->sortByColumn(-1);
+
 	foreach(PsiAccount* pa, psi->contactList()->accounts())
 		new AccountManageItem(lv_accs, pa);
 
Index: psi/src/accountmanagedlg.h
===================================================================
--- psi.orig/src/accountmanagedlg.h	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/accountmanagedlg.h	2013-01-15 14:04:24.340826952 +0400
@@ -21,7 +21,7 @@
 #ifndef ACCOUNTMANAGEDLG_H
 #define ACCOUNTMANAGEDLG_H
 
-#include "ui_accountmanage.h"
+#include <QTreeWidget>
 
 namespace XMPP
 {
@@ -33,6 +33,23 @@
 class PsiAccount;
 class QTreeWidgetItem;
 
+class AccountManageTree : public QTreeWidget
+{
+	Q_OBJECT
+
+public:
+	AccountManageTree(QWidget *parent = 0);
+
+protected:
+	void dropEvent(QDropEvent *event);
+	void dragMoveEvent(QDragMoveEvent *event);
+
+signals:
+	void orderChanged(QList<PsiAccount *> accountsList);
+};
+
+#include "ui_accountmanage.h"
+
 class AccountManageDlg : public QDialog, public Ui::AccountManage
 {
 	Q_OBJECT
Index: psi/src/psicon.cpp
===================================================================
--- psi.orig/src/psicon.cpp	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/psicon.cpp	2013-01-15 14:04:24.340826952 +0400
@@ -240,11 +240,13 @@
 		accountTree.removeOption("accounts", true);
 		// save accounts with known base
 		QSet<QString> cbases;
+		QStringList order;
 		foreach(UserAccount ua, acc) {
 			if (!ua.optionsBase.isEmpty()) {
 				ua.toOptions(&accountTree);
 				cbases += ua.optionsBase;
 			}
+			order.append(ua.id);
 		}
 		// save new accounts
 		int idx = 0;
@@ -258,6 +260,7 @@
 				ua.toOptions(&accountTree, base);
 			}
 		}
+		accountTree.setOption("order", order);
 		QFile accountsFile(pathToProfile(activeProfile, ApplicationInfo::ConfigLocation) + "/accounts.xml");
 		accountTree.saveOptions(accountsFile.fileName(), "accounts", ApplicationInfo::optionsNS(), ApplicationInfo::version());;
 
@@ -651,6 +654,17 @@
 			ua.fromOptions(&d->accountTree, base);
 			accs += ua;
 		}
+		QStringList order = d->accountTree.getOption("order").toStringList();
+		int start = 0;
+		foreach (const QString &id, order) {
+			for (int i = start; i < accs.size(); ++i) {
+				if (accs[i].id == id) {
+					accs.move(i, start);
+					start++;
+					break;
+				}
+			}
+		}
 
 		// Disable accounts if necessary, and overwrite locked properties
 		if (PsiOptions::instance()->getOption("options.ui.account.single").toBool() || !PsiOptions::instance()->getOption("options.account.domain").toString().isEmpty()) {
@@ -1013,6 +1027,11 @@
 	d->contactList->removeAccount(pa);
 }
 
+void PsiCon::setAccountsOrder(QList<PsiAccount*> accounts)
+{
+	d->contactList->setAccountsOrder(accounts);
+}
+
 void PsiCon::statusMenuChanged(XMPP::Status::Type x, bool forceDialog)
 {
 #ifndef YAPSI
Index: psi/src/psicon.h
===================================================================
--- psi.orig/src/psicon.h	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/psicon.h	2013-01-15 14:04:24.340826952 +0400
@@ -148,6 +148,7 @@
 	void doToolbars();
 	void doStatusPresets();
 	void checkAccountsEmpty();
+	void setAccountsOrder(QList<PsiAccount*>);
 
 public slots:
 	void doSleep();
Index: psi/src/psicontactlist.cpp
===================================================================
--- psi.orig/src/psicontactlist.cpp	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/psicontactlist.cpp	2013-01-15 14:04:24.340826952 +0400
@@ -280,6 +280,28 @@
 }
 
 /**
+ * Moves accounts from list to top. affects default account
+ */
+void PsiContactList::setAccountsOrder(QList<PsiAccount*> accounts)
+{
+	int start = 0;
+	bool needSave = false;
+	foreach (PsiAccount *account, accounts) {
+		int index = accounts_.indexOf(account, start);
+		if (index != -1) {
+			accounts_.move(index, start);
+			if (index != start) {
+				needSave = true;
+			}
+			start++;
+		}
+	}
+	if (needSave) {
+		emit saveAccounts();
+	}
+}
+
+/**
  * It's called by each and every PsiAccount on its creation.
  */
 void PsiContactList::link(PsiAccount* account)
Index: psi/src/psicontactlist.h
===================================================================
--- psi.orig/src/psicontactlist.h	2013-01-15 14:04:24.344826952 +0400
+++ psi/src/psicontactlist.h	2013-01-15 14:04:24.340826952 +0400
@@ -62,6 +62,7 @@
 	PsiAccount *defaultAccount() const;
 
 	UserAccountList getUserAccountList() const;
+	void setAccountsOrder(QList<PsiAccount*> accounts);
 
 	PsiAccount* createAccount(const QString& name, const Jid& j = "", const QString& pass = "", bool opt_host = false, const QString& host = "", int port = 5222, bool legacy_ssl_probe = true, UserAccount::SSLFlag ssl = UserAccount::SSL_Auto, QString proxyID = "", const QString &tlsOverrideDomain="", const QByteArray &tlsOverrideCert=QByteArray());
 	void createAccount(const UserAccount&);
