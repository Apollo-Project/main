Index: psi/src/contactlistgroup.cpp
===================================================================
--- psi.orig/src/contactlistgroup.cpp	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistgroup.cpp	2013-01-15 14:04:29.436827159 +0400
@@ -334,6 +334,17 @@
 	return haveOnlineContacts_;
 }
 
+bool ContactListGroup::isHidden() const
+{
+	return model()->groupState()->isHidden(this);
+}
+
+void ContactListGroup::setHidden(bool hidden)
+{
+	model_->groupState()->setHidden(this, hidden);
+	model_->updatedGroupVisibility(this);
+}
+
 bool ContactListGroup::haveAlwaysVisibleContacts() const
 {
 	return haveAlwaysVisibleContacts_;
Index: psi/src/contactlistgroup.h
===================================================================
--- psi.orig/src/contactlistgroup.h	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistgroup.h	2013-01-15 14:04:29.436827159 +0400
@@ -56,6 +56,8 @@
 	virtual int onlineContactsCount() const;
 	virtual int totalContactsCount() const;
 	int contactsCount() const;
+	bool isHidden() const;
+	void setHidden(bool hidden);
 
 	QList<PsiContact*> contacts() const;
 
Index: psi/src/contactlistgroupmenu.cpp
===================================================================
--- psi.orig/src/contactlistgroupmenu.cpp	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistgroupmenu.cpp	2013-01-15 14:04:29.436827159 +0400
@@ -57,6 +57,7 @@
 	QAction* actionMucHide_;
 	QAction* actionMucShow_;
 	QAction* actionMucLeave_;
+	QAction* actionHide_;
 
 public:
 	Private(ContactListGroupMenu* menu, ContactListGroup* _group)
@@ -108,6 +109,9 @@
 		actionMucLeave_ = new IconAction(tr("Leave All"), this, "psi/action_muc_leave");
 		connect(actionMucLeave_, SIGNAL(triggered()), SLOT(mucLeave()));
 
+		actionHide_ = new IconAction(tr("Hidden"), "psi/show_hidden", tr("Hidden"), 0, this, 0, true);
+		connect(actionHide_, SIGNAL(triggered(bool)), SLOT(actHide(bool)));
+
 		authMenu_ = 0;
 
 		if (ContactListGroup::SpecialType_Conference != group->specialGroupType()) {
@@ -120,6 +124,8 @@
 			menu->addAction(sendMessageAction_);
 			menu->addAction(actionCustomStatus_);
 			menu->addSeparator();
+			menu->addAction(actionHide_);
+			menu_->addSeparator();
 			authMenu_ = menu->addMenu(tr("Authorization"));
 			authMenu_->addAction(actionAuth_);
 			authMenu_->addAction(actionAuthRequest_);
@@ -152,6 +158,7 @@
 		renameAction_->setEnabled(group->isEditable());
 		removeGroupAndContactsAction_->setEnabled(group->isRemovable());
 		removeGroupWithoutContactsAction_->setEnabled(group->isRemovable());
+		actionHide_->setChecked(group->isHidden());
 #ifdef YAPSI
 		addGroupAction_->setEnabled(group->model()->contactList()->haveAvailableAccounts());
 #endif
@@ -302,6 +309,14 @@
 		}
 	}
 
+	void actHide(bool hide)
+	{
+		if (!group)
+			return;
+
+		group->setHidden(hide);
+	}
+
 #ifdef YAPSI
 	void addGroup()
 	{
Index: psi/src/contactlistgroupstate.cpp
===================================================================
--- psi.orig/src/contactlistgroupstate.cpp	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistgroupstate.cpp	2013-01-15 14:04:29.436827159 +0400
@@ -95,6 +95,23 @@
 	order_[group->fullName()] = order;
 }
 
+bool ContactListGroupState::isHidden(const ContactListGroup* group) const
+{
+	const QString groupName = group->fullName();
+	if(hidden_.contains(groupName)) {
+		return hidden_.value(groupName);
+	}
+
+	return false;
+}
+
+void ContactListGroupState::setHidden(const ContactListGroup* group, bool hidden)
+{
+	saveGroupStateTimer_->start();
+
+	hidden_[group->fullName()] = hidden;
+}
+
 void ContactListGroupState::updateGroupList(const ContactListModel* model)
 {
 	GroupExpandedState newExpanded;
@@ -182,6 +199,20 @@
 			}
 		}
 	}
+	{
+		QDomElement hidden = findSubTag(root, "hidden", 0);
+		if (!hidden.isNull()) {
+			for (QDomNode n = hidden.firstChild(); !n.isNull(); n = n.nextSibling()) {
+				QDomElement e = n.toElement();
+				if (e.isNull())
+					continue;
+
+				if (e.tagName() == "item") {
+					hidden_[e.attribute("fullName")] = e.text() == "true";
+				}
+			}
+		}
+	}
 }
 
 void ContactListGroupState::save()
@@ -220,6 +251,19 @@
 			}
 		}
 	}
+	{
+		QDomElement hidden = XMLHelper::emptyTag(&doc, "hidden");
+		root.appendChild(hidden);
+
+		QMap<QString, bool>::iterator i = hidden_.begin();
+		for (; i != hidden_.end(); ++i) {
+			if (i.value() == true) {
+				QDomElement item = textTag(&doc, "item", "true");
+				item.setAttribute("fullName", i.key());
+				hidden.appendChild(item);
+			}
+		}
+	}
 
 	PsiOptions::instance()->setOption(groupStateOptionPath.arg(id_), doc.toString());
 }
Index: psi/src/contactlistgroupstate.h
===================================================================
--- psi.orig/src/contactlistgroupstate.h	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistgroupstate.h	2013-01-15 14:04:29.436827159 +0400
@@ -50,6 +50,9 @@
 	int groupOrder(const ContactListGroup* group) const;
 	void setGroupOrder(const ContactListGroup* group, int order);
 
+	bool isHidden(const ContactListGroup* group) const;
+	void setHidden(const ContactListGroup* group, bool hidden);
+
 	void updateGroupList(const ContactListModel* model);
 
 	void load(const QString& id);
@@ -66,6 +69,7 @@
 	QString id_;
 	GroupExpandedState expanded_;
 	QMap<QString, int> order_;
+	QMap<QString, bool> hidden_;
 
 	QStringList groupNames(const ContactListModel* model, const QModelIndex& parent, QStringList parentName) const;
 };
Index: psi/src/contactlistproxymodel.cpp
===================================================================
--- psi.orig/src/contactlistproxymodel.cpp	2013-01-15 14:04:29.440827160 +0400
+++ psi/src/contactlistproxymodel.cpp	2013-01-15 14:04:29.436827159 +0400
@@ -121,7 +121,7 @@
 			}
 
 			bool show = true;
-			if (index.data(Qt::DisplayRole) == PsiContact::hiddenGroupName()) {
+			if (index.data(Qt::DisplayRole) == PsiContact::hiddenGroupName() || group->isHidden()) {
 				show = showHidden();
 			}
 
