Entering 'iris'
Entering 'src/libpsi'
diff --git a/src/psioptions.cpp b/src/psioptions.cpp
index b4eb871..ad0c48b 100644
--- a/src/psioptions.cpp
+++ b/src/psioptions.cpp
@@ -334,6 +334,42 @@ void PsiOptions::getOptionsStorage_finished()
 	}
 }
 
+/**
+ * Reset node \a name to default value
+ * \return Nothing
+ */
+void PsiOptions::resetOption(const QString &name)
+{
+	defaults(); // to init defaults_
+	QStringList nodes = getChildOptionNames(name);
+
+	if (!isInternalNode(name)) {
+		const QVariant &dev = defaults_->getOption(name);
+		if (!dev.isValid()) { // don't touch non exist nodes
+			return;
+		}
+		const QVariant &prev = getOption(name);
+		if (prev == dev) { // do nothing if values is identical
+			return;
+		}
+		setOption(name, dev);
+	}
+	else { // internal node
+		foreach(QString node, nodes) {
+			const QVariant &dev = defaults_->getOption(node);
+			if (!dev.isValid()) {
+				continue;
+			}
+			const QVariant &prev = getOption(node);
+			if (prev == dev) {
+				continue;
+			}
+			setOption(node, dev);
+		}
+	}
+}
+
+
 PsiOptions* PsiOptions::instance_ = NULL;
 PsiOptions* PsiOptions::defaults_ = NULL;
 
diff --git a/src/psioptions.h b/src/psioptions.h
index 9414213..54cbd55 100644
--- a/src/psioptions.h
+++ b/src/psioptions.h
@@ -47,6 +47,7 @@ public:
 	bool newProfile();
 	bool save(QString file);
 	void autoSave(bool autoSave, QString autoFile = "");
+	void resetOption(const QString &name);
 
 // don't call this normally
 	PsiOptions();
diff --git a/src/psioptionseditor.cpp b/src/psioptionseditor.cpp
index 340643a..fd6a8f0 100644
--- a/src/psioptionseditor.cpp
+++ b/src/psioptionseditor.cpp
@@ -160,11 +160,13 @@ PsiOptionsEditor::PsiOptionsEditor(QWidget *parent)
 
 	buttonLine->addStretch(1);
 
-	if (1) { // FIXME
-		pb_delete = new QPushButton(tr("Delete"), this);
-		buttonLine->addWidget(pb_delete);
-		connect(pb_delete, SIGNAL(clicked()), SLOT(deleteit()));
-	}
+	pb_delete = new QPushButton(tr("Delete..."), this);
+	buttonLine->addWidget(pb_delete);
+	connect(pb_delete, SIGNAL(clicked()), SLOT(deleteit()));
+
+	pb_reset = new QPushButton(tr("Reset..."), this);
+	buttonLine->addWidget(pb_reset);
+	connect(pb_reset, SIGNAL(clicked()), SLOT(resetit()));
 
 	pb_edit = new QPushButton(tr("Edit..."), this);
 	buttonLine->addWidget(pb_edit);
@@ -274,12 +276,28 @@ void PsiOptionsEditor::deleteit()
 		sub = true;
 		confirm = tr("Really delete all options starting with %1.?");
 	}
-	if (QMessageBox::Yes == QMessageBox::warning(this, tr("Psi: Option Editor"),
+	if (QMessageBox::Yes == QMessageBox::warning(this, tr("Psi+: Option Editor"),
 				   confirm.arg(option), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel)) {
 		PsiOptions::instance()->removeOption( option, sub);
 	}
 }
 
+void PsiOptionsEditor::resetit()
+{
+	QModelIndex idx = tv_->currentIndex();
+	QString option = tm_->indexToOptionName(idx);
+	bool sub = false;
+	QString confirm = tr("Really reset options %1 to default value?");
+	if (o_->isInternalNode(option)) {
+		sub = true;
+		confirm = tr("Really reset all options starting with %1. to default value?");
+	}
+	if (QMessageBox::Yes == QMessageBox::warning(this, tr("Psi+: Option Editor"),
+                   confirm.arg(option), QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel)) {
+		PsiOptions::instance()->resetOption(option);
+	}
+}
+
 void PsiOptionsEditor::detach()
 {
 	new PsiOptionsEditor();
diff --git a/src/psioptionseditor.h b/src/psioptionseditor.h
index 69e44c2..ed98b90 100644
--- a/src/psioptionseditor.h
+++ b/src/psioptionseditor.h
@@ -27,6 +27,7 @@ private slots:
 	void add();
 	void edit();
 	void deleteit();
+	void resetit();
 	void detach();
 
 private:
@@ -39,6 +40,7 @@ private:
 	QLabel* lb_path;
 	QLabel* lb_comment;
 	QPushButton *pb_delete;
+	QPushButton *pb_reset;
 	QPushButton *pb_edit;
 	QPushButton *pb_new;
 	QToolButton *pb_detach;
