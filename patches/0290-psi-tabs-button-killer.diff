--- git.orig/options/default.xml
+++ git/options/default.xml
@@ -377,6 +377,7 @@
 				<group-state comment="Saved state data of the tabsets defined by options.ui.tabs.grouping"/>
 				<tab-singles type="QString" comment="Tab types that would have been untabbed are given their own tabset. 'C' for chat and 'M' for mucs"/>
 				<use-tab-shortcuts type="bool">true</use-tab-shortcuts>
+				<show-tab-buttons type="bool">true</show-tab-buttons>
 			</tabs>
 		</ui>
 		<shortcuts comment="Shortcuts">
--- git.orig/src/options/opt_chat.cpp
+++ git/src/options/opt_chat.cpp
@@ -103,6 +103,7 @@ void OptionsTabChat::applyOptions()
 	PsiOptions::instance()->setOption("options.ui.chat.alert-for-already-open-chats", d->ck_alertOpenChats->isChecked());
 	PsiOptions::instance()->setOption("options.ui.chat.raise-chat-windows-on-new-messages", d->ck_raiseChatWindow->isChecked());
 	PsiOptions::instance()->setOption("options.ui.chat.use-small-chats", d->ck_smallChats->isChecked());
+	PsiOptions::instance()->setOption("options.ui.tabs.show-tab-buttons", d->ck_showTabButtons->isChecked());
 
 	QString delafter;
 	switch (bg_delChats->buttons().indexOf( bg_delChats->checkedButton() )) {
@@ -179,6 +180,7 @@ void OptionsTabChat::restoreOptions()
 	d->ck_alertOpenChats->setChecked( PsiOptions::instance()->getOption("options.ui.chat.alert-for-already-open-chats").toBool() );
 	d->ck_raiseChatWindow->setChecked( PsiOptions::instance()->getOption("options.ui.chat.raise-chat-windows-on-new-messages").toBool() );
 	d->ck_smallChats->setChecked( PsiOptions::instance()->getOption("options.ui.chat.use-small-chats").toBool() );
+	d->ck_showTabButtons->setChecked( PsiOptions::instance()->getOption("options.ui.tabs.show-tab-buttons").toBool() );
 	d->ck_tabChats->setChecked( PsiOptions::instance()->getOption("options.ui.tabs.use-tabs").toBool() );
 	d->cb_tabGrouping->setEnabled(PsiOptions::instance()->getOption("options.ui.tabs.use-tabs").toBool());
 	QString tabGrouping = PsiOptions::instance()->getOption("options.ui.tabs.grouping").toString();
--- git.orig/src/options/opt_chat.ui
+++ git/src/options/opt_chat.ui
@@ -120,6 +120,13 @@
     </layout>
    </item>
    <item>
+    <widget class="QCheckBox" name="ck_showTabButtons" >
+     <property name="text" >
+      <string>Show tab buttons</string>
+     </property>
+    </widget>
+   </item>
+   <item>
     <widget class="QCheckBox" name="ck_autoResize" >
      <property name="text" >
       <string>Auto-resize text input field</string>
--- git.orig/src/psicon.cpp
+++ git/src/psicon.cpp
@@ -1324,7 +1324,8 @@ void PsiCon::optionChanged(const QString
 	}
 
 	if (option == "options.ui.tabs.use-tabs" ||
-		option == "options.ui.tabs.grouping") {
+		option == "options.ui.tabs.grouping" ||
+		option == "options.ui.tabs.show-tab-buttons") {
 		QMessageBox::information(0, tr("Information"), tr("Some of the options you changed will only have full effect upon restart."));
 		//notifyRestart = false;
 	}
--- git.orig/src/tabs/tabdlg.cpp
+++ git/src/tabs/tabdlg.cpp
@@ -781,7 +781,7 @@ void TabDlg::setUserManagementEnabled(bo
 	}
 
 	userManagement_ = enabled;
-	tabWidget_->setTabButtonsShown(enabled);
+	tabWidget_->setTabButtonsShown(PsiOptions::instance()->getOption("options.ui.tabs.show-tab-buttons").toBool());
 	tabWidget_->setDragsEnabled(enabled);
 }
 
--- git.orig/src/widgets/psitabwidget.cpp
+++ git/src/widgets/psitabwidget.cpp
@@ -75,6 +75,10 @@ PsiTabWidget::PsiTabWidget(QWidget *pare
 
 	setTabPosition(QTabWidget::North);
 
+	if (!PsiOptions::instance()->getOption("options.ui.tabs.show-tab-buttons").toBool()){
+		closeButton_->hide();
+		downButton_->hide();
+	}
 	connect( tabBar_, SIGNAL(mouseDoubleClickTab(int)), SLOT(mouseDoubleClickTab(int)));
 	connect( tabBar_, SIGNAL(mouseMiddleClickTab(int)), SLOT(mouseMiddleClickTab(int)));
 	connect( tabBar_, SIGNAL( currentChanged(int)), SLOT(tab_currentChanged(int)));
