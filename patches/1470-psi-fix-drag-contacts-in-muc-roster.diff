--- psi.orig/src/gcuserview.cpp
+++ psi/src/gcuserview.cpp
@@ -334,6 +334,7 @@ GCUserViewGroupItem::GCUserViewGroupItem
 	, baseText_(t)
 {
 	updateText();
+	setFlags(Qt::ItemIsSelectable | Qt::ItemIsEnabled);
 }
 
 void GCUserViewGroupItem::updateText()
@@ -356,6 +357,7 @@ GCUserView::GCUserView(QWidget* parent)
 	setIndentation(0);
 	setContextMenuPolicy(Qt::NoContextMenu);
 	setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
+	setDragDropMode(QAbstractItemView::DragOnly);
 
 	setItemDelegate(new GCUserViewDelegate(this));
 	QTreeWidgetItem* i;
@@ -378,17 +380,16 @@ void GCUserView::setMainDlg(GCMainDlg* m
 	gcDlg_ = mainDlg;
 }
 
-//Q3DragObject* GCUserView::dragObject()
-//{
-//	Q3ListViewItem* it = currentItem();
-//	if (it) {
-//		// WARNING: We are assuming that group items can never be dragged
-//		GCUserViewItem* u = (GCUserViewItem*) it;
-//		if (!u->s.mucItem().jid().isEmpty())
-//			return new Q3TextDrag(u->s.mucItem().jid().bare(),this);
-//	}
-//	return NULL;
-//}
+QMimeData* GCUserView::mimeData(QList<QTreeWidgetItem *>items) const
+{
+	QMimeData* data = 0;
+	if(!items.isEmpty()) {
+		data = new QMimeData();
+		data->setText(items.first()->text(0));
+	}
+
+	return data;
+}
 
 void GCUserView::clear()
 {
--- psi.orig/src/gcuserview.h
+++ psi/src/gcuserview.h
@@ -75,7 +75,7 @@ public:
 
 	void setMainDlg(GCMainDlg* mainDlg);
 	GCMainDlg* mainDlg() const { return gcDlg_; };
-//	Q3DragObject* dragObject();
+	virtual QMimeData* mimeData(const QList<QTreeWidgetItem*>items) const;
 	void clear();
 	void updateAll();
 	bool hasJid(const Jid&);
