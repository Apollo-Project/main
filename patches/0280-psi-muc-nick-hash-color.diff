Entering 'iris'
Entering 'src/libpsi'
diff --git a/options/default.xml b/options/default.xml
index ba43bc1..389d7c7 100644
--- a/options/default.xml
+++ b/options/default.xml
@@ -219,7 +219,7 @@
 					<width>580</width>
 					<height>420</height>
 				</size>
-				<use-highlighting type="bool">true</use-highlighting><use-nick-coloring type="bool">true</use-nick-coloring>
+				<use-highlighting type="bool">true</use-highlighting><use-nick-coloring type="bool">true</use-nick-coloring><use-hash-nick-coloring type="bool">true</use-hash-nick-coloring><colored-history type="bool">true</colored-history>
 			</muc>
 			<show-deprecated comment="Deprecated functionality or protocols">
 				<service-discovery comment="Service discovery dialog">
diff --git a/src/chatview_te.cpp b/src/chatview_te.cpp
index d5cd9d0..1e1fbab 100644
--- a/src/chatview_te.cpp
+++ b/src/chatview_te.cpp
@@ -290,7 +290,7 @@ void ChatView::renderMucMessage(const MessageView &mv)
 		alerttagsc = "</b>";
 	}
 
-	if(mv.isSpooled()) {
+	if(mv.isSpooled() && !PsiOptions::instance()->getOption("options.ui.muc.colored-history").toBool()) {
 		nickcolor = ColorOpt::instance()->color(infomrationalColorOpt).name();
 	} else {
 		nickcolor = getMucNickColor(mv.nick(), mv.isLocal());
diff --git a/src/chatviewcommon.cpp b/src/chatviewcommon.cpp
index dcbd311..de1ecda 100644
--- a/src/chatviewcommon.cpp
+++ b/src/chatviewcommon.cpp
@@ -19,6 +19,8 @@
  */
 
 #include <QWidget>
+#include <QColor>
+#include <QRegExp>
 
 #include "chatviewcommon.h"
 #include "psioptions.h"
@@ -42,30 +44,52 @@ bool ChatViewCommon::updateLastMsgTime(QDateTime t)
 
 QString ChatViewCommon::getMucNickColor(const QString &nick, bool isSelf, QStringList validList)
 {
+	const char* rgbBlack = "#000000";
+	QString nickwoun = nick; // nick without underscores
+	nickwoun.replace(QRegExp("^_*"), "");
+	nickwoun.replace(QRegExp("_*$"), "");
+
 	int sender;
-	if(isSelf || nick.isEmpty()) {
+	if(isSelf || nickwoun.isEmpty()) {
 		sender = -1;
 	} else {
-		if (!_nicks.contains(nick)) {
+		if (!_nicks.contains(nickwoun)) {
 			//not found in map
-			_nicks.insert(nick,_nickNumber);
+			_nicks.insert(nickwoun,_nickNumber);
 			_nickNumber++;
 		}
-		sender=_nicks[nick];
+		sender=_nicks[nickwoun];
 	}
 
 	QStringList nickColors = validList.isEmpty()
 		? PsiOptions::instance()->getOption("options.ui.look.colors.muc.nick-colors").toStringList()
 		: validList;
 
-	if(!PsiOptions::instance()->getOption("options.ui.muc.use-nick-coloring").toBool() || nickColors.empty()) {
-		return "#000000";
-	}
-	else if(sender == -1 || nickColors.size() == 1) {
-		return nickColors[nickColors.size()-1];
-	}
-	else {
-		int n = sender % (nickColors.size()-1);
-		return nickColors[n];
+	if(!PsiOptions::instance()->getOption("options.ui.muc.use-nick-coloring").toBool()) {
+		return rgbBlack;
+	} else {
+		if (PsiOptions::instance()->getOption("options.ui.muc.use-hash-nick-coloring").toBool()) {
+			/* Hash-driven colors */
+			Q_ASSERT(nickwoun.size());
+			quint32 num = qHash(nickwoun);
+			int s = ((char*)&num)[2];
+			int v = ((char*)&num)[3];
+			num = (num ^ (num >> 16)) & 0xffff;
+			num ^= (num >> 9);
+			QColor precolor = QColor::fromHsv(num % 360,
+					s < 150? 250 : s, v > 210? 210 : v < 100? 150 : v);
+			return precolor.name();
+		} else {
+			/* Colors from list */
+			if (nickColors.empty()) {
+				return rgbBlack;
+			}
+			if(sender == -1 || nickColors.size() == 1) {
+				return nickColors[nickColors.size()-1];
+			} else {
+				int n = sender % (nickColors.size()-1);
+				return nickColors[n];
+			}
+		}
 	}
 }
diff --git a/src/options/opt_general_groupchat.ui b/src/options/opt_general_groupchat.ui
index cb539b4..83d7ab9 100644
--- a/src/options/opt_general_groupchat.ui
+++ b/src/options/opt_general_groupchat.ui
@@ -157,6 +157,13 @@
        </property>
       </widget>
      </item>
+      <item>
+      <widget class="QCheckBox" name="ck_gcHashNickColoring" >
+       <property name="text" >
+        <string>Enable hash nick coloring</string>
+       </property>
+      </widget>
+     </item>
      <item>
       <widget class="QGroupBox" name="ncGroupBox" >
        <property name="title" >
@@ -296,11 +303,30 @@
   <tabstop>pb_removeHighlightWord</tabstop>
   <tabstop>pb_addHighlightWord</tabstop>
   <tabstop>ck_gcNickColoring</tabstop>
+  <tabstop>ck_gcHashNickColoring</tabstop>
   <tabstop>le_newNickColor</tabstop>
   <tabstop>pb_nickColor</tabstop>
   <tabstop>pb_removeNickColor</tabstop>
   <tabstop>pb_addNickColor</tabstop>
  </tabstops>
  <resources/>
- <connections/>
-</ui>
+ <connections>
+  <connection>
+   <sender>ck_gcNickColoring</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>ck_gcHashNickColoring</receiver>
+   <slot>setEnabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>326</x>
+     <y>18</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>326</x>
+     <y>42</y>
+    </hint>
+   </hints>
+  </connection>
+ </connections>
+ </ui>
+
diff --git a/src/options/opt_groupchat.cpp b/src/options/opt_groupchat.cpp
index 84b8339..afc5cfc 100644
--- a/src/options/opt_groupchat.cpp
+++ b/src/options/opt_groupchat.cpp
@@ -67,6 +67,7 @@ void OptionsTabGroupchat::applyOptions()
 	GeneralGroupchatUI *d = (GeneralGroupchatUI *)w;
 	PsiOptions::instance()->setOption("options.ui.muc.use-highlighting", d->ck_gcHighlights->isChecked());
 	PsiOptions::instance()->setOption("options.ui.muc.use-nick-coloring", d->ck_gcNickColoring->isChecked());
+	PsiOptions::instance()->setOption("options.ui.muc.use-hash-nick-coloring", d->ck_gcHashNickColoring->isChecked());
 
 	QStringList highlight;
 	int i;
@@ -96,6 +97,8 @@ void OptionsTabGroupchat::restoreOptions()
 	d->ck_gcHighlights->setChecked( PsiOptions::instance()->getOption("options.ui.muc.use-highlighting").toBool() );
 	d->ck_gcNickColoring->setChecked( true );
 	d->ck_gcNickColoring->setChecked( PsiOptions::instance()->getOption("options.ui.muc.use-nick-coloring").toBool() );
+	d->ck_gcHashNickColoring->setChecked( true );
+	d->ck_gcHashNickColoring->setChecked( PsiOptions::instance()->getOption("options.ui.muc.use-hash-nick-coloring").toBool() );
 	d->lw_highlightWords->clear();
 	d->lw_highlightWords->addItems( PsiOptions::instance()->getOption("options.ui.muc.highlight-words").toStringList() );
 	d->lw_nickColors->clear();
