--- psi.orig/options/default.xml
+++ psi/options/default.xml
@@ -302,7 +302,12 @@
 				<request-receipts type="bool" >true</request-receipts>
 				<enable-growl type="bool">true</enable-growl>
 				<passive-popups>
-					<duration type="int">10000</duration>
+					<delays>
+						<chat type="int">5000</chat>
+						<file type="int">5000</file>
+						<message type="int">5000</message>
+						<status type="int">2000</status>
+					</delays>
 					<enabled type="bool">false</enabled>
 					<incoming-chat type="bool">true</incoming-chat>
 					<incoming-file-transfer type="bool">true</incoming-file-transfer>
--- psi.orig/src/psipopup.cpp
+++ psi/src/psipopup.cpp
@@ -134,7 +134,24 @@ void PsiPopup::Private::init(const PsiIc
 	else
 		titleIcon = new PsiIcon(*_titleIcon);
 
-	FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.duration").toInt() );
+//	FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.duration").toInt() );
+	switch(type)
+	{
+		case AlertMessage:
+			FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.delays.message").toInt() );
+			break;
+		case AlertChat:
+		case AlertHeadline:
+		case AlertGcHighlight:
+			FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.delays.chat").toInt() );
+			break;
+		case AlertFile:
+			FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.delays.file").toInt() );
+			break;
+		default:
+			FancyPopup::setHideTimeout( PsiOptions::instance()->getOption("options.ui.notifications.passive-popups.delays.status").toInt() );
+			break;
+	}
 	FancyPopup::setBorderColor( ColorOpt::instance()->color("options.ui.look.colors.passive-popup.border") );
 
 	popup = new FancyPopup(titleText, titleIcon, lastPopup, false);
