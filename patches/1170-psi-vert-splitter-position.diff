--- git.orig/options/default.xml
+++ git/options/default.xml
@@ -119,6 +119,8 @@
 				<disable-paste-send type="bool">false</disable-paste-send>
 				<hide-when-closing type="bool">false</hide-when-closing>
 				<status-with-priority comment="Show priority with status change" type="bool">false</status-with-priority>
+				<log-height type="int">325</log-height>
+				<chatedit-height type="int">10</chatedit-height>
 			</chat>
 			<save>
 				<toolbars-state type="QByteArray"/>
--- git.orig/src/chatsplitter.cpp
+++ git/src/chatsplitter.cpp
@@ -75,6 +75,15 @@ void ChatSplitter::setSizes(const QList<
 		splitter_->setSizes(list);
 }
 
+QList<int> ChatSplitter::sizes()
+{
+	QList<int> list;
+	if(splitter_)
+		list = splitter_->sizes();
+
+	return list;
+}
+
 /**
  * Moves \a child either to the real QSplitter, or adds it to the
  * private layout.
@@ -130,6 +139,8 @@ void ChatSplitter::updateLayout()
 
 	foreach(QWidget* child, children_)
 		updateChildLayout(child);
+
+	connect(splitter_, SIGNAL(splitterMoved(int,int)), SIGNAL(splitterMoved(int,int)));
 }
 
 /**
--- git.orig/src/chatsplitter.h
+++ git/src/chatsplitter.h
@@ -35,6 +35,7 @@ public:
 	void setOrientation(Qt::Orientation orientation);
 	void addWidget(QWidget* widget);
 	void setSizes(const QList<int>& list);
+	QList<int> sizes();
 
 protected:
 	/**
@@ -49,6 +50,9 @@ public slots:
 private slots:
 	void childDestroyed(QObject* obj);
 
+signals:
+	void splitterMoved(int,int);
+
 private:
 	void updateChildLayout(QWidget* child);
 	void updateLayout();
--- git.orig/src/groupchatdlg.cpp
+++ git/src/groupchatdlg.cpp
@@ -241,6 +241,9 @@ public:
 	int logSize;
 	int rosterSize;
 
+	int logHeight;
+	int chateditHeight;
+
 public:
 	bool trackBar;
 
@@ -786,6 +789,7 @@ GCMainDlg::GCMainDlg(PsiAccount *pa, con
 	ui_.tb_actions->setStyleSheet(" QToolButton::menu-indicator { image:none } ");
 
 	connect(ui_.hsplitter, SIGNAL(splitterMoved(int,int)), this, SLOT(horizSplitterMoved()));
+	connect(ui_.vsplitter, SIGNAL(splitterMoved(int,int)), this, SLOT(verticalSplitterMoved(int,int)));
 
 	// resize the horizontal splitter
 	d->logSize = PsiOptions::instance()->getOption("options.ui.muc.log-width").toInt();
@@ -803,10 +807,9 @@ GCMainDlg::GCMainDlg(PsiAccount *pa, con
 		ui_.hsplitter->insertWidget(0, ui_.lv_users);  // Swap widgets
 
 	// resize the vertical splitter
-	list.clear();
-	list << 324;
-	list << 10;
-	ui_.vsplitter->setSizes(list);
+	d->logHeight = PsiOptions::instance()->getOption("options.ui.chat.log-height").toInt();
+	d->chateditHeight = PsiOptions::instance()->getOption("options.ui.chat.chatedit-height").toInt();
+	setVSplitterPosition(d->logHeight, d->chateditHeight);
 
 	X11WM_CLASS("groupchat");
 
@@ -870,6 +873,26 @@ void GCMainDlg::horizSplitterMoved()
 	PsiOptions::instance()->setOption("options.ui.muc.roster-width", d->rosterSize);
 }
 
+void GCMainDlg::verticalSplitterMoved(int, int)
+{
+	QList<int> list = ui_.vsplitter->sizes();
+	d->logHeight = list.first();
+	d->chateditHeight = list.last();
+	PsiOptions::instance()->setOption("options.ui.chat.log-height", d->logHeight);
+	PsiOptions::instance()->setOption("options.ui.chat.chatedit-height", d->chateditHeight);
+
+	emit vSplitterMoved(d->logHeight, d->chateditHeight);
+}
+
+void GCMainDlg::setVSplitterPosition(int log,int chat)
+{
+	QList<int> list;
+	d->logHeight = log;
+	d->chateditHeight = chat;
+	list << log << chat;
+	ui_.vsplitter->setSizes(list);
+}
+
 void GCMainDlg::doMinimize()
 {
 	window()->showMinimized();
--- git.orig/src/groupchatdlg.h
+++ git/src/groupchatdlg.h
@@ -83,6 +83,7 @@ public:
 	virtual TabbableWidget::State state() const;
 	virtual int unreadMessageCount() const;
 	virtual QString desiredCaption() const;
+	virtual void setVSplitterPosition(int log,int chat);
 
 protected:
 	void setShortcuts();
@@ -145,6 +146,7 @@ private slots:
 	void sendTemp(const QString &);
 	void psButtonEnabled();
 	void horizSplitterMoved();
+	void verticalSplitterMoved(int, int);
 	void doMinimize();
 
 
--- git.orig/src/psichatdlg.cpp
+++ git/src/psichatdlg.cpp
@@ -236,10 +236,11 @@ void PsiChatDlg::initUi()
 
 	connect(account()->capsManager(), SIGNAL(capsChanged(const Jid&)), SLOT(capsChanged(const Jid&)));
 
-	QList<int> list;
-	list << 324;
-	list << 96;
-	ui_.splitter->setSizes(list);
+	logHeight = PsiOptions::instance()->getOption("options.ui.chat.log-height").toInt();
+	chateditHeight = PsiOptions::instance()->getOption("options.ui.chat.chatedit-height").toInt();
+	setVSplitterPosition(logHeight, chateditHeight);
+
+	connect(ui_.splitter, SIGNAL(splitterMoved(int,int)), this, SLOT(verticalSplitterMoved(int,int)));
 
 	smallChat_ = PsiOptions::instance()->getOption("options.ui.chat.use-small-chats").toBool();
  	ui_.pb_send->setIcon(IconsetFactory::icon("psi/action_button_send").icon());
@@ -267,6 +268,26 @@ void PsiChatDlg::initUi()
 	connect(ui_.log->textWidget(), SIGNAL(quote(const QString &)), ui_.mle->chatEdit(), SLOT(insertAsQuote(const QString &)));
 }
 
+void PsiChatDlg::verticalSplitterMoved(int, int)
+{
+	QList<int> list = ui_.splitter->sizes();
+	logHeight = list.first();
+	chateditHeight = list.last();
+	PsiOptions::instance()->setOption("options.ui.chat.log-height", logHeight);
+	PsiOptions::instance()->setOption("options.ui.chat.chatedit-height", chateditHeight);
+
+	emit vSplitterMoved(logHeight, chateditHeight);
+}
+
+void PsiChatDlg::setVSplitterPosition(int log,int chat)
+{
+	QList<int> list;
+	logHeight = log;
+	chateditHeight = chat;
+	list << log << chat;
+	ui_.splitter->setSizes(list);
+}
+
 void PsiChatDlg::updateCountVisibility()
 {
 	if (PsiOptions::instance()->getOption("options.ui.message.show-character-count").toBool() && !smallChat_) {
--- git.orig/src/psichatdlg.h
+++ git/src/psichatdlg.h
@@ -21,6 +21,8 @@ public:
 	PsiChatDlg(const Jid& jid, PsiAccount* account, TabManager* tabManager);
 	~PsiChatDlg();
 
+	virtual void setVSplitterPosition(int log,int chat);
+
 protected:
 	// reimplemented
 	void contextMenuEvent(QContextMenuEvent *);
@@ -51,6 +53,7 @@ private slots:
 	void doPasteAndSend();
 	void sendTemp(const QString &);
 	void psButtonEnabled();
+	void verticalSplitterMoved(int, int);
 
 private:
 	void initToolBar();
@@ -102,6 +105,9 @@ private:
 	bool smallChat_;
 	class ChatDlgMCmdProvider;
 
+	int logHeight;
+	int chateditHeight;
+
 private:
 	bool tabmode;
 	QPointer <PsiWindowHeader> winHeader_;
--- git.orig/src/tabs/tabbablewidget.h
+++ git/src/tabs/tabbablewidget.h
@@ -68,6 +68,7 @@ public:
 	virtual State state() const = 0;
 	virtual int unreadMessageCount() const = 0;
 	virtual QString desiredCaption() const = 0;
+	virtual void setVSplitterPosition(int,int){}; // default implementation do nothing
 
 	// Templates
 	SendButtonTemplatesMenu* getTemplateMenu();
@@ -78,6 +79,7 @@ signals:
 	void invalidateTabInfo();
 	void updateFlashState();
 	void eventsRead(const Jid &);
+	void vSplitterMoved(int,int);
 
 public slots:
 	virtual void deactivated();
--- git.orig/src/tabs/tabdlg.cpp
+++ git/src/tabs/tabdlg.cpp
@@ -399,6 +399,7 @@ void TabDlg::addTab(TabbableWidget* tab)
 
 	connect(tab, SIGNAL(invalidateTabInfo()), SLOT(updateTab()));
 	connect(tab, SIGNAL(updateFlashState()), SLOT(updateFlashState()));
+	connect(tab, SIGNAL(vSplitterMoved(int,int)), SLOT(updateVSplitters(int,int)));
 
 	this->showWithoutActivation();
 	updateTab(tab);
@@ -461,6 +462,7 @@ void TabDlg::removeTabWithNoChecks(Tabba
 {
 	disconnect(tab, SIGNAL(invalidateTabInfo()), this, SLOT(updateTab()));
 	disconnect(tab, SIGNAL(updateFlashState()), this, SLOT(updateFlashState()));
+	disconnect(tab, SIGNAL(vSplitterMoved(int,int)), this, SLOT(updateVSplitters(int,int)));
 
 	tabs_.removeAll(tab);
 	tabWidget_->removePage(tab);
@@ -859,3 +861,10 @@ void TabDlg::setTabIcon(QWidget *widget,
 {
 	tabWidget_->setTabIcon(widget, icon);
 }
+
+void TabDlg::updateVSplitters(int log, int chat)
+{
+	foreach(TabbableWidget *w, tabs_) {
+		w->setVSplitterPosition(log, chat);
+	}
+}
--- git.orig/src/tabs/tabdlg.h
+++ git/src/tabs/tabdlg.h
@@ -143,6 +143,7 @@ private slots:
 	void menu_sendTabTo(QAction *act);
 	void queuedSendTabTo(TabbableWidget* chat, TabDlg *dest);
 	void showTabMenu(int tab, QPoint pos, QContextMenuEvent * event);
+	void updateVSplitters(int log, int chat);
 
 private:
 	TabDlgDelegate *delegate_;
